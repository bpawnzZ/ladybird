name: Build, Package and Publish

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]  # Trigger on version tags
    paths:
      - '**'  # Trigger on any file change
  pull_request:
    branches: [ main ]
    paths:
      - '**'  # Trigger on any file change
  workflow_dispatch:  # Allow manual triggering
  schedule:
    - cron: '0 0 * * 1'  # Weekly build on Monday at midnight

env:
  PACKAGE_NAME: my-app
  VERSION: 1.0.0
  GITHUB_USERNAME: ${{ github.actor }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Setup build environment
    - name: Set up build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake base-devel

    # Validate username is lowercase
    - name: Validate username
      run: |
        if [[ "$GITHUB_USERNAME" != "${GITHUB_USERNAME,,}" ]]; then
          echo "::error::Username must be lowercase"
          exit 1
        fi

    # Build application
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake ..
        make -j$(nproc)

    # Create package directory structure
    - name: Create package structure
      run: |
        mkdir -p pkg/$PACKAGE_NAME
        cp -r build/* pkg/$PACKAGE_NAME/

    # Create PKGBUILD file
    - name: Create PKGBUILD
      run: |
        cat > pkg/$PACKAGE_NAME/PKGBUILD <<EOL
        # Maintainer: $GITHUB_USERNAME <$GITHUB_USERNAME@users.noreply.github.com>
        pkgname=$PACKAGE_NAME
        pkgver=$VERSION
        pkgrel=1
        pkgdesc="My application package"
        arch=('x86_64')
        license=('MIT')
        depends=()
        source=()
        sha256sums=()

        package() {
          mkdir -p "\$pkgdir/usr/bin"
          mkdir -p "\$pkgdir/usr/lib"
          mkdir -p "\$pkgdir/usr/include"
          
          # Copy binaries
          find . -type f -executable -exec cp {} "\$pkgdir/usr/bin/" \;
          
          # Copy libraries
          find . -name '*.so*' -exec cp {} "\$pkgdir/usr/lib/" \;
          
          # Copy headers
          find . -name '*.h' -exec cp --parents {} "\$pkgdir/usr/include/" \;
        }
        EOL

    # Build the package
    - name: Build package
      run: |
        cd pkg/$PACKAGE_NAME
        makepkg -s --noconfirm

    # Test package installation
    - name: Test package installation
      run: |
        sudo pacman -U pkg/$PACKAGE_NAME/$PACKAGE_NAME-$VERSION-1-x86_64.pkg.tar.zst --noconfirm
        $PACKAGE_NAME --version

    # Publish to GitHub Packages
    - name: Publish to GitHub Packages
      uses: actions/upload-artifact@v3
      with:
        name: $PACKAGE_NAME-$VERSION
        path: pkg/$PACKAGE_NAME/$PACKAGE_NAME-$VERSION-1-x86_64.pkg.tar.zst

    # Cache build artifacts
    - name: Cache build artifacts
      uses: actions/cache@v3
      with:
        path: |
          build
          pkg
        key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: $PACKAGE_NAME-$VERSION
        path: dist

    - name: Publish to GitHub Packages
      uses: actions/upload-artifact@v3
      with:
        name: $PACKAGE_NAME
        path: dist
        retention-days: 90

    - name: Verify package availability
      run: |
        ls -l dist
        echo "Packages successfully published to GitHub Packages"
