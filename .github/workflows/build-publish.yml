name: Build, Package and Publish

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PACKAGE_NAME: my-app
  VERSION: 1.0.0
  GITHUB_USERNAME: ${{ github.actor }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    # Setup build environment
    - name: Set up build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential cmake

    # Validate username is lowercase
    - name: Validate username
      run: |
        if [[ "$GITHUB_USERNAME" != "${GITHUB_USERNAME,,}" ]]; then
          echo "::error::Username must be lowercase"
          exit 1
        fi

    # Build application
    - name: Build application
      run: |
        mkdir build
        cd build
        cmake ..
        make -j$(nproc)
        tar -czf ../$PACKAGE_NAME-$VERSION.tar.gz .

    # Create pacman package
    - name: Create pacman package
      run: |
        mkdir -p pkg/$PACKAGE_NAME
        cp $PACKAGE_NAME-$VERSION.tar.gz pkg/$PACKAGE_NAME/
        
        cat > pkg/$PACKAGE_NAME/PKGBUILD <<EOL
        pkgname=$PACKAGE_NAME
        pkgver=$VERSION
        pkgrel=1
        pkgdesc="My application"
        arch=('x86_64')
        license=('MIT')
        depends=()
        source=("$PACKAGE_NAME-$VERSION.tar.gz")
        sha256sums=('SKIP')

        package() {
          tar -xzf $PACKAGE_NAME-$VERSION.tar.gz -C "$pkgdir"
        }
        EOL
        
        cd pkg/$PACKAGE_NAME
        makepkg

    # Test package installation
    - name: Test package installation
      run: |
        sudo pacman -U pkg/$PACKAGE_NAME/$PACKAGE_NAME-$VERSION-1-x86_64.pkg.tar.zst --noconfirm
        $PACKAGE_NAME --version

    # Publish to GitHub Packages
    - name: Publish to GitHub Packages
      uses: actions/upload-artifact@v3
      with:
        name: $PACKAGE_NAME-$VERSION
        path: |
          $PACKAGE_NAME-$VERSION.tar.gz
          pkg/$PACKAGE_NAME/$PACKAGE_NAME-$VERSION-1-x86_64.pkg.tar.zst

    # Cache build artifacts
    - name: Cache build artifacts
      uses: actions/cache@v3
      with:
        path: |
          build
          pkg
        key: ${{ runner.os }}-build-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-build-

  publish:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: $PACKAGE_NAME-$VERSION
        path: dist

    - name: Publish to GitHub Packages
      uses: actions/upload-artifact@v3
      with:
        name: $PACKAGE_NAME
        path: dist
        retention-days: 90

    - name: Verify package availability
      run: |
        ls -l dist
        echo "Packages successfully published to GitHub Packages"
