name: Build Arch Linux Package and AppImage
on:
  push:
    tags:
      - 'v*'
jobs:
  build-appimage:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y wget fuse libfuse2
      - name: Download AppImage tools
        run: |
          wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
          chmod +x appimagetool-x86_64.AppImage
      - name: Build AppImage
        run: |
          mkdir -p AppDir/usr/bin
          cp -r path/to/your/binary AppDir/usr/bin/
          ./appimagetool-x86_64.AppImage AppDir ladybird-${{ github.ref_name }}.AppImage
      - name: Upload AppImage artifact
        uses: actions/upload-artifact@v2
        with:
          name: appimage
          path: ladybird-${{ github.ref_name }}.AppImage

  build-arch-package:
    runs-on: ubuntu-20.04
    container:
      image: archlinux
    steps:
      - name: Install dependencies
        run: |
          pacman -S --noconfirm base-devel git qt5-base qt5-webengine
      - name: Checkout
        uses: actions/checkout@v2
      - name: Determine tag name
        run: echo "TAG_NAME=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Download source tar.gz
        run: |
          wget -O ladybird.tar.gz https://github.com/LadybirdBrowser/ladybird/archive/refs/tags/${{ env.TAG_NAME }}.tar.gz
      - name: Compute sha256sum
        run: |
          sha256sum ladybird.tar.gz > ladybird.tar.gz.sha256
      - name: Create PKGBuild file
        run: |
          cat > PKGBuild <<EOF
pkgname=ladybird
pkgver=${{ env.TAG_NAME }}
pkgrel=1
arch=(x86_64)
url="https://github.com/LadybirdBrowser/ladybird"
license=(MIT)
depends=(qt5-base qt5-webengine)
makedepends=(cmake)
source=("https://github.com/LadybirdBrowser/ladybird/archive/refs/tags/${{ env.TAG_NAME }}.tar.gz")
sha256sums=("$(cat ladybird.tar.gz.sha256 | cut -d' ' -f1)")
build() {
  cd "\$pkgname-\$pkgver"
  mkdir build
  cd build
  cmake ..
  make
}
package() {
  cd "\$pkgname-\$pkgver/build"
  install -Dm755 ladybird "\$pkgdir/usr/bin/ladybird"
}
EOF
      - name: Build package
        run: |
          makepkg -s
      - name: Upload package artifact
        uses: actions/upload-artifact@v2
        with:
          name: arch-package
          path: *.pkg.tar.zst

  create-release:
    runs-on: ubuntu-20.04
    needs: [build-appimage, build-arch-package]
    steps:
      - name: Download AppImage artifact
        uses: actions/download-artifact@v2
        with:
          name: appimage
      - name: Download Arch package artifact
        uses: actions/download-artifact@v2
        with:
          name: arch-package
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Ladybird Browser version ${{ github.ref_name }}
          draft: false
          prerelease: false
      - name: Upload AppImage asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./appimage/ladybird-${{ github.ref_name }}.AppImage
          asset_name: ladybird-${{ github.ref_name }}.AppImage
          asset_content_type: application/octet-stream
      - name: Upload Arch package asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./arch-package/ladybird-${{ github.ref_name }}-1-x86_64.pkg.tar.zst
          asset_name: ladybird-${{ github.ref_name }}-1-x86_64.pkg.tar.zst
          asset_content_type: application/octet-stream 
